rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
<<<<<<< HEAD
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Roadmaps collection
    match /roadmaps/{roadmapId} {
      allow read: if resource.data.isPublic || 
                   (isAuthenticated() && resource.data.createdBy == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                            resource.data.createdBy == request.auth.uid;
    }

    // Progress collection
    match /progress/{progressId} {
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                    request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
                            resource.data.userId == request.auth.uid;
    }

    // Resources collection
    match /resources/{resourceId} {
      allow read: if true;  // Resources are public
      allow create, update, delete: if isAuthenticated() && 
                                    request.auth.token.email.matches(".*@admin\\.com");
=======

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2024, 12, 31);
>>>>>>> 41e31c532534bbc91aa9847c0256e008a7e7c676
    }
  }
}